receivers:
  # Host metrics receiver for system metrics - 5 second collection interval
  hostmetrics:
    collection_interval: 5s
    scrapers:
      cpu:
      disk:
      filesystem:
      load:
      memory:
      network:
      paging:
      processes:
  
  # JMX receiver for Cassandra metrics
  jmx:
    jar_path: /opt/opentelemetry-jmx-metrics.jar
    endpoint: localhost:7199
    target_system: cassandra
    collection_interval: 5s
    resource_attributes:
      cassandra.node.id: NODE_ALIAS
  
  # Docker stats receiver for container metrics
  docker_stats:
    endpoint: unix:///var/run/docker.sock
    collection_interval: 5s
    timeout: 20s
    api_version: 1.24
  
  # File log receiver for Cassandra logs
  filelog:
    include:
      - /mnt/cassandra/logs/*.log
      - /mnt/cassandra/logs/**/*.log
    include_file_path: true
    include_file_name: true
    start_at: beginning
    operators:
      - type: regex_parser
        id: cassandra_log_parser
        regex: '^(?P<level>\w+)\s+\[(?P<thread>[^\]]+)\]\s+(?P<timestamp>[\d\-\s\:,]+)\s+(?P<class>[^\s]+)\s+-\s+(?P<message>.*)'
        parse_from: body
        timestamp:
          parse_from: attributes.timestamp
          layout: '%Y-%m-%d %H:%M:%S,%L'
      - type: severity_parser
        parse_from: attributes.level
        mapping:
          info: INFO
          warn: WARN
          error: ERROR
          debug: DEBUG
          trace: TRACE
      - type: move
        from: attributes.message
        to: body
      - type: add
        field: attributes.service.name
        value: cassandra
      - type: add
        field: attributes.node.id
        value: NODE_ALIAS

processors:
  # Batch processor to optimize data flow
  batch:
    timeout: 10s
    send_batch_size: 1024
    send_batch_max_size: 2048
  
  # Memory limiter to prevent OOM on Cassandra nodes
  memory_limiter:
    check_interval: 1s
    limit_mib: 256  # Lower limit for agent on Cassandra node
    spike_limit_mib: 64
  
  # Resource processor to add metadata
  resource:
    attributes:
      - key: service.name
        value: cassandra
        action: upsert
      - key: node.type
        value: cassandra
        action: insert
      - key: node.id
        value: NODE_ALIAS
        action: upsert
      - key: deployment.environment
        value: easy-cass-lab
        action: insert
      - key: host.name
        value: NODE_ALIAS
        action: upsert
  
  # Attributes processor for additional metadata
  attributes:
    actions:
      - key: cluster.name
        value: easy-cass-lab
        action: insert

exporters:
  # OTLP exporter to send data to control node collector
  otlp:
    endpoint: CONTROL_NODE_IP:4317
    tls:
      insecure: true
    sending_queue:
      enabled: true
      num_consumers: 4
      queue_size: 100
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
    compression: gzip
  
  # Debug exporter for troubleshooting (disabled by default)
  debug:
    verbosity: basic
    sampling_initial: 2
    sampling_thereafter: 500

extensions:
  # Health check extension
  health_check:
    endpoint: 0.0.0.0:13133
  
  # Performance profiler (for debugging)
  pprof:
    endpoint: 0.0.0.0:1777

service:
  extensions: [health_check, pprof]
  
  pipelines:
    # Metrics pipeline - system, JMX, and Docker metrics
    metrics:
      receivers: [hostmetrics, jmx, docker_stats]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlp]
    
    # Logs pipeline - Cassandra logs
    logs:
      receivers: [filelog]
      processors: [memory_limiter, batch, resource, attributes]
      exporters: [otlp]
  
  telemetry:
    logs:
      level: info
      initial_fields:
        service: otel-cassandra-agent
    metrics:
      level: none  # Disable internal metrics to reduce overhead